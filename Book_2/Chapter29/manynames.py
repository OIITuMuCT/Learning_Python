X = 11                      # Глобальное имя/атрибут модуля (Х или manynames.X)


def f():                
    print("f() =", X)       # Доступ к глобальному имени Х (11)


def g():
    X = 22
    print("g() = ", X)      # Локальная переменная в функции (Х, скрывает Х в модуле)


class C:
    X = 33                  # Атрибут класса (С.Х)

    def m(self):            
        X = 44              # Локальная переменная в методе (Х)
        self.X = 55         # Атрибут экземпляра (экземпляр.Х)
        
if __name__ == '__main__':
    print(X)                # 11 Имя из модуля (оно же manynames.X)
                            #   за пределами файла)
    f()                     # 11: глобальное имя
    g()                     # 22: локальное имя
    print('X = ', X)        # 11: из модуля не изменилось
    
    obj = C()               # Создать экземпляр
    print('obj.X = ', obj.X)# 33: имя из класса, унаследованное экземпляром
    
    obj.m()                 # Присоединение имени атрибута Х к экземпляру
    print('obj.X = ', obj.X)# 55: имя из экземпляра
    print('C.X = ', C.X)              # 33: имя из класса (оно же obj.X, если Х
                            # в экземпляре отсутствует)
    # print(C.m.X)          # Неудача: видимо только в методе
    # print(g.X)            # Неудача: видимо только в функции.