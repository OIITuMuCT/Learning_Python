Декораторы
Декорирование представляет собой способ указания управляющего или дополняющего кода для функции и классов. 
Сами декораторы принимают вид вызываемых объектов( например, функций), обрабатывающих другие вызываемые объекты.
    * Декораторы функций, добавленные в Python 2.X, делают повторное привязывание имен во время определения 
    функций, предоставлять уровень логики, который может управлять функциями и методами или последующими 
    обращениями к ним.
    * Декораторы классов, добавленные в Python 2.6 и 3.X, делают повторное привязывание имен во время определения 
    классов, предоставляя уровень логики, который может управлять классами или экземплярами, созданными при 
    последующих обращениях к классам.

Выражаясь кратко, декораторы предлагают способ вставки автоматически запускаемого кода в конце операторов определения
функций и классов - в конце def для декораторов функций и в конце class  для декораторов классов. Такой код может
исполнять множество ролей:
    * Управление вызовами экземплярами
        Посредники вызовов
            
            Декораторы функций вводят в действие объекты оболочек, которые позволяют перехватывать последующие 
            вызовы функций и обрабатывать их по мере надобности, обычно передавая сами вызовы исходной функции 
            для выполнения управляемого действия.
        
        Посредники интерфейсов
            Декораторы классов вводят в действие объекты оболочек, которые позволяют перехватывать последующие вызовы
            для создания экземпляров и при необходимости обрабатывать их, обычно передавая сами вызовы исходному классу
            для создания управляемого экземпляра.

Управление функциями и классами
    * Администраторы функций
        Декораторы функций также могут использоваться дял управления объектами функций взамен или в дополнение
    к их последующим вызовам, скажем, чтобы регистрировать функции в API-итерфейсах.Однако основное внимание здесь
    будет уделяться их более распространенному применению в качестве оболочек вызовов.

    * Администраторы классов
        Декораторы классов также могут использоваться для непосредственного управления объектами классов взамен
    или в дополнение к вызовам, создающим экземпляры, например, чтобы дополнить класс новыми методами.Поскольку 
    такая роль плотно пересекается с ролью метаклассов, в следующей главе будут приведены дополнительные сценарии
    применения. Как выясниться, оба инструмента запускаются в конце процесса создания классов, но декораторы классов 
    часто предлагают более легковесное решение.

